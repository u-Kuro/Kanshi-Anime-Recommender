self.addEventListener("unhandledrejection",event=>{const reason=event?.reason;console.error(reason);let error=reason?.stack||reason?.message;if(typeof error!=="string"||!error){error="Something went wrong"}self.postMessage({error:error})});let db,categories,mediaCautions,hiddenMediaEntries,recommendedMediaEntries,mediaEntriesInfo,lastCategoriesKeys,semiContentCautions={genres:{},tags:{}},cautionContents={genres:{},tags:{}},loadedIds={},nextIndexToLoad={},loadedMediaList={},loadMediaTimeout={},lastSearchedWord={},shouldUpdateUserData,shouldUpdateRecommendedMediaList,shouldUpdateMediaCautions,updateListTimeout,selectCategoryTimeout,messageQueue=[],isProcessing,latestUpdateDate,latestSearchDate={};const hasOwnProperty=Object.prototype.hasOwnProperty;self.onmessage=({data})=>{messageQueue.push(data);if(!isProcessing){isProcessing=true;executeMessage()}};async function executeMessage(){const data=messageQueue.shift();const postId=data?.postId;try{if(!db)await IDBInit();if(hasOwnProperty.call(data,"loadMore")){let selectedCategory=data?.selectedCategory;if(recommendedMediaEntries!=null&&mediaEntriesInfo!=null&&categories!=null&&selectedCategory!=null){const searchDate=data?.searchDate;if(searchDate>latestSearchDate[selectedCategory]||latestSearchDate[selectedCategory]==null&&searchDate){latestSearchDate[selectedCategory]=searchDate}clearTimeout(loadMediaTimeout[selectedCategory]);loadMediaTimeout[selectedCategory]=setTimeout(()=>{let category=categories?.[selectedCategory];if(category!=null){const searchedWord=data?.searchedWord;const shouldReload=data?.reload||searchedWord!==lastSearchedWord[selectedCategory];let idx;if(shouldReload||!loadedMediaList[selectedCategory]){idx=0;const mediaList=category.mediaList;if(typeof searchedWord==="string"){const query=searchedWord.trim().replace(/[\uFF01-\uFF60\uFFE0-\uFFE6\u3000]/g,ch=>{if(ch==="　")return"";return String.fromCharCode(ch.charCodeAt(0)-65248)}).normalize("NFD").replace(/[^a-zA-Z0-9\p{Lo}]/gu,"").toLowerCase();loadedMediaList[selectedCategory]=mediaList.filter(id=>{let title=recommendedMediaEntries[id]?.title;if(isJsonObject(title)){return Object.values(title).some($title=>typeof $title==="string"&&$title.trim().replace(/[\uFF01-\uFF60\uFFE0-\uFFE6\u3000]/g,ch=>{if(ch==="　")return"";return String.fromCharCode(ch.charCodeAt(0)-65248)}).normalize("NFD").replace(/[^a-zA-Z0-9\p{Lo}]/gu,"").toLowerCase().includes(query))}})}else{loadedMediaList[selectedCategory]=mediaList}}else{idx=nextIndexToLoad[selectedCategory]??0}const mediaListLen=loadedMediaList[selectedCategory].length;let id;if(idx<mediaListLen&&(id=loadedMediaList[selectedCategory][idx])){const media=editMedia(id,category.shownSortName);const airingAt=media?.nextAiringEpisode?.airingAt;self.postMessage({loadMore:true,selectedCategory:selectedCategory,idx:idx,media:media,airingAt:media?.nextAiringEpisode?.estimated!==true&&airingAt*1e3>(new Date).getTime()?airingAt:undefined,isLast:idx+1===mediaListLen,updateDate:latestUpdateDate,searchDate:latestSearchDate[selectedCategory],postId:postId});nextIndexToLoad[selectedCategory]=idx+1;loadedIds[selectedCategory]=loadedMediaList[selectedCategory].slice(0,idx).map(id=>id)}else if(mediaListLen===0){self.postMessage({loadMore:true,selectedCategory:selectedCategory,isLast:true,updateDate:latestUpdateDate,searchDate:latestSearchDate[selectedCategory],postId:postId});nextIndexToLoad[selectedCategory]=0;loadedIds[selectedCategory]=[]}else{self.postMessage({loadMore:true,selectedCategory:selectedCategory,updateDate:latestUpdateDate,searchDate:latestSearchDate[selectedCategory],postId:postId})}lastSearchedWord[selectedCategory]=searchedWord}},0)}}else if(hasOwnProperty.call(data,"categorySelected")){let categorySelected=data?.categorySelected;if(categories!=null&&categorySelected!=null){let category=categories?.[categorySelected];if(category!=null){const{mediaFilters,sortBy}=category;self.postMessage(await compressJSONToBlob({categorySelected:categorySelected,category:{mediaFilters:mediaFilters,sortBy:sortBy},reloadList:true,postId:postId}))}}}else if(hasOwnProperty.call(data,"updateMediaNotifications")){try{if(data.initList===true){recommendedMediaEntries=await getIDBData("recommendedMediaEntries")}if(recommendedMediaEntries!=null){const mediaIds=await decompressBlobToJSON(data.mediaIdsBlob);const mediaUpdates={};for(let i=0;i<mediaIds.length;i++){const media=recommendedMediaEntries[mediaIds[i]];if(media){const title=media.title?.english||media?.title?.romaji||media?.title?.native;const episodes=media.episodes;const mediaUrl=media.mediaUrl;const userStatus=media.userStatus?.toUpperCase?.();const episodeProgress=media.episodeProgress||0;mediaUpdates[media.id]={id:media.id,title:typeof title==="string"?title:"",maxEpisode:typeof episodes==="number"?episodes:-1,mediaUrl:typeof mediaUrl==="string"?mediaUrl:"",userStatus:typeof userStatus==="string"?userStatus:"Unseen",episodeProgress:typeof episodeProgress==="number"?episodeProgress:0}}}if(jsonIsEmpty(mediaUpdates)){self.postMessage({updateMediaNotifications:true,postId:postId})}else{self.postMessage({updateMediaNotifications:true,mediaUpdatesBlob:await compressBlob(new Blob([JSON.stringify(Object.values(mediaUpdates))])),postId:postId})}}}catch(e){console.error(e);self.postMessage({updateMediaNotifications:true,postId:postId})}}else if(hasOwnProperty.call(data,"getEarlisetReleaseDate")){if(recommendedMediaEntries!=null){let loadedListsArrays=Object.values(loadedIds);let flattenedLoadedList=loadedListsArrays.reduce((acc,curr)=>{for(let i=0,l=curr?.length;i<l;i++){acc.push(curr[i])}return acc},[]);let loadedList=flattenedLoadedList.map(id=>recommendedMediaEntries[id]);if(loadedList.length){const currentDateTime=(new Date).getTime();loadedList=loadedList.filter(e=>e?.nextAiringEpisode?.estimated===true?false:e?.nextAiringEpisode?.airingAt*1e3>currentDateTime);if(loadedList.length){loadedList.sort((a,b)=>{let x=a?.nextAiringEpisode?.airingAt,y=b?.nextAiringEpisode?.airingAt;x=x!=null?x:Infinity;y=y!=null?y:Infinity;return x-y});const earliestReleaseDate=loadedList?.[0]?.nextAiringEpisode?.airingAt;if(typeof earliestReleaseDate==="number"&&!isNaN(earliestReleaseDate)){self.postMessage({getEarlisetReleaseDate:true,earliestReleaseDate:earliestReleaseDate,postId:postId})}}}}}else if(hasOwnProperty.call(data,"loadAll")){categories=await getIDBData("categories");if(!isJsonObject(categories)||jsonIsEmpty(categories)){self.postMessage({loadAll:true,shouldReloadList:true,updateDate:latestUpdateDate,postId:postId})}else{let selectedCategory=data.selectedCategory;const{mediaCautions={},hiddenMediaEntries={}}=await getIDBRecords(["mediaCautions","hiddenMediaEntries"]);const categoriesKeys=Object.keys(categories);removeDeletedCategories(categories,categoriesKeys);let category=categories?.[selectedCategory];if(category==null){for(let categoriesKey in categories){selectedCategory=categoriesKey;category=categories[selectedCategory];break}}const{mediaFilters,sortBy}=category||{};self.postMessage(await compressJSONToBlob({loadAll:true,shouldReloadList:false,categories:categoriesKeys.sort().reduce((acc,rec)=>{acc[rec]=1;return acc},{}),hiddenMediaEntries:hiddenMediaEntries,mediaCautions:mediaCautions,selectedCategory:selectedCategory,category:{mediaFilters:mediaFilters,sortBy:sortBy},reloadList:true,updateDate:latestUpdateDate,postId:postId}));for(let i=0;i<mediaCautions.length;i++){let{status,filterType,optionName,optionCategory}=mediaCautions[i]||{};if(status==="included"){if(filterType==="selection"){if(optionCategory==="Genre"){semiContentCautions.genres[optionName]=true}else if(optionCategory==="Tag"){semiContentCautions.tags[optionName]=true}}}else if(status==="excluded"){if(filterType==="selection"){if(optionCategory==="Genre"){cautionContents.genres[optionName]=true}else if(optionCategory==="Tag"){cautionContents.tags[optionName]=true}}}}({recommendedMediaEntries,mediaEntriesInfo}=await getIDBRecords(["recommendedMediaEntries","mediaEntriesInfo"]));self.postMessage({shouldUpdateMediaNotifications:true})}}else{shouldUpdateUserData=shouldUpdateUserData||hasOwnProperty.call(data,"updateUserData");shouldUpdateRecommendedMediaList=shouldUpdateRecommendedMediaList||hasOwnProperty.call(data,"updateRecommendedMediaList");shouldUpdateMediaCautions=shouldUpdateMediaCautions||hasOwnProperty.call(data,"updateMediaCautions");const updateList=(updateDate,updatedCategories)=>{let promises=[];if(shouldUpdateRecommendedMediaList){promises.push((async()=>{({recommendedMediaEntries=recommendedMediaEntries,mediaEntriesInfo=mediaEntriesInfo}=await getIDBRecords(["recommendedMediaEntries","mediaEntriesInfo"]));shouldUpdateRecommendedMediaList=false;self.postMessage({shouldUpdateMediaNotifications:true})})())}if(shouldUpdateMediaCautions){promises.push((async()=>{(function(userData){if(isJsonObject(categories)&&!jsonIsEmpty(categories)){categories=userData.categories;mediaCautions=userData.mediaCautions||[];hiddenMediaEntries=userData.hiddenMediaEntries||{};removeDeletedCategories(categories)}})(await getIDBRecords(["categories","mediaCautions","hiddenMediaEntries"]));if(mediaCautions instanceof Array){semiContentCautions={genres:{},tags:{}};cautionContents={genres:{},tags:{}};for(let i=0,l=mediaCautions.length;i<l;i++){let{status,filterType,optionName,optionCategory}=mediaCautions[i]||{};if(status==="included"){if(filterType==="selection"){if(optionCategory==="Genre"){semiContentCautions.genres[optionName]=true}else if(optionCategory==="Tag"){semiContentCautions.tags[optionName]=true}}}else if(status==="excluded"){if(filterType==="selection"){if(optionCategory==="Genre"){cautionContents.genres[optionName]=true}else if(optionCategory==="Tag"){cautionContents.tags[optionName]=true}}}}}shouldUpdateUserData=shouldUpdateMediaCautions=false})())}else if(shouldUpdateUserData||updatedCategories){promises.push((async()=>{(function(userData){if(isJsonObject(categories)&&!jsonIsEmpty(categories)){categories=userData.categories;mediaCautions=userData.mediaCautions||[];hiddenMediaEntries=userData.hiddenMediaEntries||{};removeDeletedCategories(categories)}})(await getIDBRecords(["categories","mediaCautions","hiddenMediaEntries"]));shouldUpdateUserData=false})())}Promise.all(promises).then(async()=>{if(updatedCategories){const $categories=categories||{};const categoriesKeys=Object.keys($categories);for(const categoryKey in updatedCategories){const category=$categories[categoryKey];if(category==null)continue;const{mediaFilters,sortBy}=category;updatedCategories[categoryKey]={mediaFilters:mediaFilters,sortBy:sortBy}}if(updateDate>latestUpdateDate||latestUpdateDate==null&&updateDate){latestUpdateDate=updateDate}self.postMessage(await compressJSONToBlob({updateDate:updateDate,updatedCategories:updatedCategories,categories:categoriesKeys.sort().reduce((acc,rec)=>{acc[rec]=1;return acc},{}),reloadList:true,updateDate:updateDate,postId:postId}))}else{if(updateDate>latestUpdateDate||latestUpdateDate==null&&updateDate){latestUpdateDate=updateDate}self.postMessage({reloadList:true,updateDate:updateDate,postId:postId})}})};const updateDate=data.updateDate;if(updateDate>latestUpdateDate||latestUpdateDate==null&&updateDate){clearTimeout(updateListTimeout)}if(hasOwnProperty.call(data,"updatedCategories")){updateList(updateDate,data.updatedCategories)}else{updateListTimeout=setTimeout(()=>updateList(updateDate))}}}catch(reason){console.error(reason);let error=reason?.stack||reason?.message;if(typeof error!=="string"||!error){error="Something went wrong"}self.postMessage({error:error,postId:postId})}if(messageQueue.length>0){executeMessage()}else{isProcessing=false}}function editMedia(id,shownSortName){let media,mediaInfo;if((media=recommendedMediaEntries[id])==null||(mediaInfo=mediaEntriesInfo[id])==null)return null;if(hasOwnProperty.call(media,"isEdited")){return media}mediaInfo=JSON.parse(JSON.stringify(mediaInfo));media=Object.assign(JSON.parse(JSON.stringify(media)),{description:mediaInfo.description,duration:mediaInfo.duration,trailerID:mediaInfo.trailer?.id,bannerImageUrl:mediaInfo.bannerImage,trailerThumbnailUrl:mediaInfo.trailer?.thumbnail});const contentCaution={caution:[],semiCaution:[]};media.genres.forEach(genre=>{if(cautionContents.genres[genre]){contentCaution.caution.push(genre)}else if(semiContentCautions.genres[genre]){contentCaution.semiCaution.push(genre)}});media.tags.forEach(tag=>{let tagName=tag?.name;if(cautionContents.tags[tagName]){contentCaution.caution.push(tagName)}else if(semiContentCautions.tags[tagName]){contentCaution.semiCaution.push(tagName)}});let sortedFavoriteContents=[];if(isJsonObject(media.favoriteContents)&&!jsonIsEmpty(media.favoriteContents)){sortedFavoriteContents=Object.entries(media.favoriteContents.studios).concat(Object.entries(media.favoriteContents.tags)).concat(Object.entries(media.favoriteContents.genres)).sort((a,b)=>b[1]-a[1]).map(([k,v])=>`${k}: (${formatNumber(v)})`)}let genres=media?.genres;if(genres?.length){let favouriteGenres=media?.favoriteContents?.genres||{},otherGenres=media?.otherContents?.genres||{},caution={},semiCaution={};if(isJsonObject(contentCaution)&&!jsonIsEmpty(contentCaution)){contentCaution.caution.forEach(genre=>{caution[genre]=true});contentCaution.semiCaution.forEach(genre=>{semiCaution[genre]=true})}let genresFavourite=[],genreCaution=[],genreSemiCaution=[],genresOthers=[],others=[],genresRunnned={};genres.forEach(genre=>{if(genresRunnned[genre]||!genre)return;genresRunnned[genre]=true;if(caution[genre]){if(favouriteGenres[genre]>0){genre=`${genre} (${formatNumber(favouriteGenres[genre])})`}else if(otherGenres[genre]>0){genre=`${genre} (${formatNumber(otherGenres[genre])})`}genreCaution.push({genre:genre,genreColor:"red"})}else if(semiCaution[genre]){if(favouriteGenres[genre]>0){genre=`${genre} (${formatNumber(favouriteGenres[genre])})`}else if(otherGenres[genre]>0){genre=`${genre} (${formatNumber(otherGenres[genre])})`}genreSemiCaution.push({genre:genre,genreColor:"teal"})}else if(favouriteGenres[genre]){genresFavourite.push({genre:genre,score:favouriteGenres[genre]})}else if(favouriteGenres[genre]>0){genresFavourite.push({genre:genre,score:favouriteGenres[genre]})}else if(otherGenres[genre]>0){genresOthers.push({genre:genre,score:otherGenres[genre]})}else{others.push({genre:genre,genreColor:null})}});genresFavourite.sort((a,b)=>{let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return bScore-aScore});genresFavourite=genresFavourite.map(e=>{return{genre:`${e.genre} (${formatNumber(e.score)})`,genreColor:"green"}});genresOthers.sort((a,b)=>{let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return bScore-aScore});genresOthers=genresOthers.map(e=>{return{genre:`${e.genre} (${formatNumber(e.score)})`,genreColor:null}});media.shownGenres=genreCaution.concat(genreSemiCaution).concat(genresFavourite).concat(genresOthers).concat(others)}else{media.shownGenres=[]}let tags=media?.tags;if(tags?.length){let favouriteTags=media?.favoriteContents?.tags||{},otherTags=media?.otherContents?.tags||{},caution={},semiCaution={};if(isJsonObject(contentCaution)&&!jsonIsEmpty(contentCaution)){contentCaution.caution.forEach(tag=>{caution[tag]=true});contentCaution.semiCaution.forEach(tag=>{semiCaution[tag]=true})}let tagsFavourite=[],tagsOthers=[],tagCaution=[],tagSemiCaution=[],others=[];let tagsRunnned={};tags.forEach(tag=>{let tagName=tag?.name;if(tagsRunnned[tagName]||!tagName)return;tagsRunnned[tagName]=true;let tagRank=tag?.rank;if(caution[tagName]){let score;if(favouriteTags[tagName]>0){score=favouriteTags[tagName]}else if(otherTags[tagName]>0){score=otherTags[tagName]}tagCaution.push({tagName:tagName,score:score,tagRank:tagRank})}else if(semiCaution[tagName]){let score;if(favouriteTags[tagName]>0){score=favouriteTags[tagName]}else if(otherTags[tagName]>0){score=otherTags[tagName]}tagSemiCaution.push({tagName:tagName,score:score,tagRank:tagRank})}else if(favouriteTags[tagName]>0){tagsFavourite.push({tagName:tagName,score:favouriteTags[tagName],tagRank:tagRank})}else if(otherTags[tagName]>0){tagsOthers.push({tagName:tagName,score:otherTags[tagName],tagRank:tagRank})}else{others.push({tagName:tagName,tagRank:tagRank})}});tagCaution.sort((a,b)=>{let aRank=a?.tagRank,bRank=b?.tagRank;if(aRank==null||isNaN(aRank))return 1;if(bRank==null||isNaN(bRank))return-1;if(bRank!==aRank)return bRank-aRank;let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return aScore-bScore});tagCaution=tagCaution.map(({tagName,score,tagRank})=>{let tag;if(score!=null){tag=`<span>${tagName} (${formatNumber(score)})${tagRank?"</span><span> "+tagRank+"%":""}</span>`}else{tag=`<span>${tagName}${tagRank?"</span><span> "+tagRank+"%":""}</span>`}return{tagName:tagName,tag:tag,tagColor:"red"}});tagSemiCaution.sort((a,b)=>{let aRank=a?.tagRank,bRank=b?.tagRank;if(aRank==null||isNaN(aRank))return 1;if(bRank==null||isNaN(bRank))return-1;if(bRank!==aRank)return bRank-aRank;let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return aScore-bScore});tagSemiCaution=tagSemiCaution.map(({tagName,score,tagRank})=>{let tag;if(score!=null){tag=`<span>${tagName} (${formatNumber(score)})${tagRank?"</span><span> "+tagRank+"%":""}</span>`}else{tag=`<span>${tagName}${tagRank?"</span><span> "+tagRank+"%":""}</span>`}return{tagName:tagName,tag:tag,tagColor:"teal"}});tagsFavourite.sort((a,b)=>{let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;if(bScore!==aScore)return bScore-aScore;let aRank=a?.tagRank,bRank=b?.tagRank;if(aRank==null||isNaN(aRank))return 1;if(bRank==null||isNaN(bRank))return-1;return bRank-aRank});tagsFavourite=tagsFavourite.map(({tagName,score,tagRank})=>{return{tagName:tagName,tag:`<span>${tagName} (${formatNumber(score)})${tagRank?"</span><span> "+tagRank+"%":""}</span>`,tagColor:"green"}});tagsOthers.sort((a,b)=>{let aRank=a?.tagRank,bRank=b?.tagRank;if(aRank==null||isNaN(aRank))return 1;if(bRank==null||isNaN(bRank))return-1;if(bRank!==aRank)return bRank-aRank;let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return bScore-aScore});tagsOthers=tagsOthers.map(({tagName,score,tagRank})=>{return{tagName:tagName,tag:`<span>${tagName} (${formatNumber(score)})${tagRank?"</span><span> "+tagRank+"%":""}</span>`,tagColor:null}});others.sort((a,b)=>{let aRank=a?.tagRank,bRank=b?.tagRank;if(aRank==null||isNaN(aRank))return 1;if(bRank==null||isNaN(bRank))return-1;return bRank-aRank});others=others.map(({tagName,tagRank})=>{return{tagName:tagName,tag:`<span>${tagName}${tagRank?"</span><span> "+tagRank+"%":""}</span>`,tagColor:null}});media.shownTags=tagCaution.concat(tagSemiCaution).concat(tagsFavourite).concat(tagsOthers).concat(others)}else{media.shownTags=[]}let studios=Object.entries(media.studios||{});if(studios?.length){let favouriteStudios=media?.favoriteContents?.studios||{},otherStudios=media?.otherContents?.studios||{},studiosFavourite=[],studiosOthers=[],others=[],studiosRunnned={};studios.forEach(([studio,studioUrl])=>{if(studiosRunnned[studio]||!studio)return;studiosRunnned[studio]=true;if(favouriteStudios[studio]>0){studiosFavourite.push({studio:[studio,studioUrl],score:favouriteStudios[studio]})}else if(otherStudios[studio]>0){studiosOthers.push({studio:[studio,studioUrl],score:otherStudios[studio]})}else{others.push({studio:{studioName:studio,studioUrl:studioUrl},studioColor:null})}});studiosFavourite.sort((a,b)=>{let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return bScore-aScore});studiosFavourite=studiosFavourite.map(e=>{return{studio:{studioName:`${e.studio[0]} (${formatNumber(e.score)})`,studioUrl:e.studio[1]},studioColor:"green"}});studiosOthers.sort((a,b)=>{let aScore=a?.score,bScore=b?.score;if(aScore==null||isNaN(aScore))return 1;if(bScore==null||isNaN(bScore))return-1;return bScore-aScore});studiosOthers=studiosOthers.map(e=>{return{studio:{studioName:`${e.studio[0]} (${formatNumber(e.score)})`,studioUrl:e.studio[1]},studioColor:null}});media.shownStudios=studiosFavourite.concat(studiosOthers).concat(others)}else{media.shownStudios=[]}let title=media?.title;media.shownTitle=title?.english||title?.romaji||title?.native||"";media.copiedTitle=title?.romaji||title?.english||title?.native||"";let score=media?.score;let $contentCaution=[];if(contentCaution?.caution instanceof Array){$contentCaution=$contentCaution.concat(contentCaution.caution)}if(contentCaution?.semiCaution instanceof Array){$contentCaution=$contentCaution.concat(contentCaution.semiCaution)}let briefInfo;if(sortedFavoriteContents.length){briefInfo=`LOVED \n - ${sortedFavoriteContents.join(", \n - ")}`}if($contentCaution.length){briefInfo=`${briefInfo?briefInfo+"\n\n ":""}${"CAUTION \n - "+$contentCaution.join(", \n - ")}`}media.briefInfo=briefInfo;let userStatus=media?.userStatus;if(userStatus==="Completed"){media.userStatusColor="green"}else if(userStatus==="Current"||userStatus==="Repeating"){media.userStatusColor="blue"}else if(userStatus==="Planning"){media.userStatusColor="orange"}else if(userStatus==="Paused"){media.userStatusColor="peach"}else if(userStatus==="Dropped"){media.userStatusColor="red"}let contentCautionColor;if(contentCaution?.caution?.length){contentCautionColor="red"}else if(contentCaution?.semiCaution?.length){contentCautionColor="teal"}else if(media.recommendationCode===0){contentCautionColor="purple"}else if(media.recommendationCode===1){contentCautionColor="orange"}else{contentCautionColor="green"}media.contentCautionColor=contentCautionColor;media.formattedWeightedScore=formatNumber(media?.weightedScore);media.formattedAverageScore=formatNumber(media?.averageScore*.1,1);media.formattedPopularity=formatNumber(media?.popularity,media?.popularity>=1e3?1:0);if(shownSortName==="Score"||shownSortName==="Date"||shownSortName==="Date Added"||shownSortName==="Date Updated"){media.shownScore=formatNumber(score)??"N/A"}else if(shownSortName==="User Score"){media.shownScore=media?.userScore??"N/A"}else if(shownSortName==="Average Score"){media.shownScore=media?.averageScore??"N/A"}else if(shownSortName==="Popularity"){media.shownCount=media.formattedPopularity??"N/A"}else if(shownSortName==="Trending"){media.shownActivity=formatNumber(media?.trending,media?.trending>=1e3?1:0)??"N/A"}else if(shownSortName==="Favorites"){media.shownFavorites=formatNumber(media?.favorites,media?.favorites>=1e3?1:0)??"N/A"}else{media.shownScore=media.formattedWeightedScore??"N/A"}let recommendedRatingColor;if(media.recommendationCode===0){recommendedRatingColor="purple-fill"}else if(media.recommendationCode===1){recommendedRatingColor="orange-fill"}else{recommendedRatingColor="green-fill"}media.recommendedRatingColor=recommendedRatingColor;media.isEdited=true;return media}function removeDeletedCategories(categories,newCategoriesKeys){if(!newCategoriesKeys)newCategoriesKeys=Object.keys(categories);if(lastCategoriesKeys){for(const categoryName of lastCategoriesKeys){if(!categories[categoryName]){clearTimeout(loadMediaTimeout[categoryName]);delete loadMediaTimeout[categoryName];delete loadedIds[categoryName];delete nextIndexToLoad[categoryName];delete loadedMediaList[categoryName];delete lastSearchedWord[categoryName]}}}lastCategoriesKeys=newCategoriesKeys}function formatNumber(number,dec=2){if(typeof number==="number"){const formatter=new Intl.NumberFormat("en-US",{maximumFractionDigits:dec,minimumFractionDigits:0,notation:"compact",compactDisplay:"short"});if(Math.abs(number)>=1e3){return formatter.format(number)}else if(Math.abs(number)<.01&&Math.abs(number)>0){return number.toExponential(0)}else{let formattedNumber=number.toFixed(dec);if(formattedNumber.indexOf(".")!==-1){formattedNumber=formattedNumber.replace(/\.?0+$/,"")}return formattedNumber||number.toLocaleString("en-US",{maximumFractionDigits:dec})}}else{return null}}function IDBInit(){return new Promise((resolve,reject)=>{try{const request=indexedDB.open("Kanshi.Media.Recommendations.AniList.W~uPtWCq=vG$TR:Zl^#t<vdS]I~N70",1);request.onsuccess=({target})=>{db=target.result;resolve()};request.onupgradeneeded=({target})=>{try{const{result,transaction}=target;const stores=["mediaEntries","mediaEntriesInfo","excludedMediaIds","mediaUpdateAt","mediaOptions","orderedMediaOptions","tagInfo","tagInfoUpdateAt","username","userMediaEntries","userMediaUpdateAt","recommendedMediaEntries","algorithmFilters","mediaCautions","hiddenMediaEntries","categories","selectedCategory","autoPlay","gridFullView","showRateLimit","showStatus","autoUpdate","autoExport","runnedAutoUpdateAt","runnedAutoExportAt","exportPathIsAvailable","shouldManageMedia","shouldProcessRecommendedEntries","nearestMediaReleaseAiringAt","recommendationError","visited","others"];for(const store of stores){result.createObjectStore(store)}transaction.oncomplete=()=>{db=result;resolve()}}catch(ex){console.error(ex);reject(ex);transaction.abort()}};request.onerror=ex=>{console.error(ex);reject(ex)}}catch(ex){console.error(ex);reject(ex)}})}function getIDBData(key){return new Promise(resolve=>{try{const get=db.transaction(key,"readonly").objectStore(key).get(key);get.onsuccess=async()=>{let value=get.result;if(value instanceof Blob){value=await new Response(value.stream().pipeThrough(new DecompressionStream("gzip"))).json()}resolve(value)};get.onerror=ex=>{console.error(ex);resolve()}}catch(ex){console.error(ex);resolve()}})}function getIDBRecords(recordKeys){return new Promise(async resolve=>{try{const transaction=db.transaction(recordKeys,"readonly");resolve(Object.fromEntries(await Promise.all(recordKeys.map(key=>{return new Promise(resolve=>{const get=transaction.objectStore(key).get(key);get.onsuccess=async()=>{let value=get.result;if(value instanceof Blob){value=await new Response(value.stream().pipeThrough(new DecompressionStream("gzip"))).json()}resolve([key,value])};get.onerror=ex=>{console.error(ex);resolve([key])}})}))))}catch(ex){console.error(ex);resolve()}})}function jsonIsEmpty(obj){for(const key in obj){return false}return true}function isJsonObject(obj){return Object.prototype.toString.call(obj)==="[object Object]"}async function decompressBlobToJSON(blob){return await new Response(blob.stream().pipeThrough(new DecompressionStream("gzip"))).json()}async function compressBlob(blob){return await new Response(blob.stream().pipeThrough(new CompressionStream("gzip"))).blob()}async function compressJSONToBlob(json){return await compressBlob(new Blob([JSON.stringify(json)]))}