let db,userList,recommendedAnimeList,loadAnimeTimeout={};const hasOwnProperty=Object.prototype.hasOwnProperty;self.addEventListener("unhandledrejection",event=>{console.error(event?.reason);self.postMessage({error:event?.reason||"Something went wrong"})});self.onmessage=async({data})=>{let postId=data.postId;try{if(!db)await IDBinit();let updateRecommendedAnimeList,updateUserList;if(userList==null||!isJsonObject(userList)||jsonIsEmpty(userList)){userList=await retrieveJSON("userList")||getDefaultUserList();updateUserList=true}if(data?.updateRecommendedAnimeList!=null||recommendedAnimeList==null){recommendedAnimeList=await retrieveJSON("recommendedAnimeList");updateRecommendedAnimeList=true}if(hasOwnProperty.call(data,"selectCategory")){let selectedCategory=data?.selectCategory;if(userList!=null&&selectedCategory!=null){let categories=userList?.categories;let category=categories?.[selectedCategory];if(category==null){self.postMessage({postId:postId});return}userList.selectedCategory=selectedCategory;await saveJSON(userList,"userList").then(()=>{self.postMessage({postId:postId})})}else{self.postMessage({postId:postId})}}else if(hasOwnProperty.call(data,"updateAnimeFilter")){self.postMessage({status:"Updating Lists"});let selectedCategory=data?.selectedCategory;let newAnimeFilters=data?.animeFilters;let newSortBy=data?.sortBy;if(recommendedAnimeList!=null&&userList!=null&&selectedCategory!=null&&(newAnimeFilters!=null||newSortBy!=null)){let categories=userList?.categories;let category=categories?.[selectedCategory];if(category==null){self.postMessage({progress:95});self.postMessage({postId:postId});return}let animeFilters=data?.animeFilters||category.animeFilters;let sortBy=data?.sortBy||category.sortBy;let animeCautions=userList.animeCautions;let cautions=await getContentCaution(animeCautions);let newCategory=updateAnimeList(animeFilters,sortBy,Object.values(recommendedAnimeList),userList.hiddenEntries,cautions);category.isHiddenList=newCategory.isHiddenList;category.shownSortName=newCategory.shownSortName;category.sortBy=newCategory.sortBy;category.animeFilters=newCategory.animeFilters;category.animeList=newCategory.animeList;userList.categories[selectedCategory]=category;self.postMessage({progress:85});await saveJSON(userList,"userList").then(()=>{self.postMessage({progress:95});self.postMessage({updateUserList:true,postId:postId})})}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}else if(hasOwnProperty.call(data,"removeId")){self.postMessage({status:"Updating Lists"});let removedId=data?.removeId;let isHiding=data?.isHiding;if(recommendedAnimeList!=null&&userList!=null&&removedId!=null&&(isHiding!=null||removedId==="all")){let animeCautions=userList.animeCautions;let cautions=await getContentCaution(animeCautions);if(removedId==="all"){userList.hiddenEntries={};isHiding=false}else if(isHiding){userList.hiddenEntries[removedId]=1}else{delete userList?.hiddenEntries?.[removedId]}let recommendedAnimeListArray=Object.values(recommendedAnimeList);let hiddenEntries=userList.hiddenEntries;let categories=userList?.categories;let categoriesCount=Object.keys(categories||{}).length;let loadedCount=0;let selectedCategory=data?.selectedCategory;if(categories?.[selectedCategory]!=null){let category=categories[selectedCategory];let isHiddenList=category?.isHiddenList;let animeList=category?.animeList;++loadedCount;let loadedPercent=Math.min(1,loadedCount/categoriesCount);let idx;if(isHiding!==isHiddenList){if(removedId==="all"){category.animeList=[]}else{category.animeList=animeList.filter((id,i)=>{if(id===removedId){idx=i;return false}return true})}userList.categories[selectedCategory]=category;self.postMessage({progress:loadedPercent*80})}else{let{animeFilters,sortBy}=category;let newCategory=updateAnimeList(animeFilters,sortBy,recommendedAnimeListArray,hiddenEntries,cautions,loadedPercent);category.animeFilters=newCategory.animeFilters;category.isHiddenList=newCategory.isHiddenList;category.shownSortName=newCategory.shownSortName;category.sortBy=newCategory.sortBy;category.animeList=newCategory.animeList;userList.categories[selectedCategory]=category}self.postMessage({removedIdx:idx,selectedCategory:selectedCategory,postId:postId})}for(let categoryKey in categories){if(categoryKey===selectedCategory)continue;++loadedCount;let loadedPercent=Math.min(1,loadedCount/categoriesCount);let category=categories[categoryKey];let isHiddenList=category?.isHiddenList;let animeList=category?.animeList;if(isHiding!==isHiddenList){if(removedId==="all"){category.animeList=[]}else{category.animeList=animeList.filter(id=>id!==removedId)}userList.categories[categoryKey]=category;loadProgress(loadedPercent*80)}else{let{animeFilters,sortBy}=category;let newCategory=updateAnimeList(animeFilters,sortBy,recommendedAnimeListArray,hiddenEntries,cautions,loadedPercent);category.animeFilters=newCategory.animeFilters;category.isHiddenList=newCategory.isHiddenList;category.shownSortName=newCategory.shownSortName;category.sortBy=newCategory.sortBy;category.animeList=newCategory.animeList;userList.categories[categoryKey]=category}}self.postMessage({progress:85});await saveJSON(userList,"userList").then(()=>{self.postMessage({progress:95});self.postMessage({updateUserList:true,postId:postId})})}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}else if(hasOwnProperty.call(data,"addedCategoryKey")){self.postMessage({status:"Updating Category"});self.postMessage({progress:30});let addedCategoryKey=data?.addedCategoryKey;if(userList!=null&&addedCategoryKey!=null){let copiedCategoryKey=data?.copiedCategoryKey;let categories=userList?.categories;let category=categories?.[copiedCategoryKey];if(category==null){self.postMessage({progress:95});self.postMessage({postId:postId});return}category=JSON.parse(JSON.stringify(category));userList.categories[addedCategoryKey]=category;self.postMessage({progress:85});await saveJSON(userList,"userList").then(()=>{self.postMessage({progress:95});self.postMessage({updateUserList:true,updateCategories:true,updatedCategoryKey:addedCategoryKey,postId:postId})})}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}else if(hasOwnProperty.call(data,"renamedCategoryKey")){self.postMessage({status:"Updating Category"});self.postMessage({progress:30});let renamedCategoryKey=data?.renamedCategoryKey;if(userList!=null&&renamedCategoryKey!=null){let replacedCategoryKey=data?.replacedCategoryKey;let categories=userList?.categories;let category=categories?.[replacedCategoryKey];if(category==null){self.postMessage({progress:95});self.postMessage({postId:postId});return}category=JSON.parse(JSON.stringify(category));userList.categories[renamedCategoryKey]=category;delete userList?.categories?.[replacedCategoryKey];self.postMessage({progress:85});await saveJSON(userList,"userList").then(()=>{self.postMessage({progress:95});self.postMessage({updateUserList:true,updateCategories:true,updatedCategoryKey:renamedCategoryKey,postId:postId})})}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}else if(hasOwnProperty.call(data,"deletedCategoryKey")){self.postMessage({status:"Updating Category"});self.postMessage({progress:30});let deletedCategoryKey=data?.deletedCategoryKey;if(userList!=null&&deletedCategoryKey!=null){delete userList?.categories?.[deletedCategoryKey];self.postMessage({progress:85});await saveJSON(userList,"userList").then(()=>{self.postMessage({progress:95});self.postMessage({updateUserList:true,updateCategories:true,postId:postId})})}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}else{if(!updateRecommendedAnimeList){if(await retrieveJSON("shouldLoadAnime")){recommendedAnimeList=await retrieveJSON("recommendedAnimeList");updateRecommendedAnimeList=true}}if(recommendedAnimeList!=null&&userList!=null){self.postMessage({status:"Updating Lists"});const callUpdateUserList=async updateAnimeCautions=>{let categories=userList?.categories||{};let categoriesCount=Object.keys(categories||{}).length;let loadedCount=0;let recommendedAnimeListArray=Object.values(recommendedAnimeList||{});let hiddenEntries=userList.hiddenEntries;if(updateAnimeCautions){userList.animeCautions=updateAnimeCautions}let animeCautions=userList.animeCautions;let cautions=await getContentCaution(animeCautions);for(let categoryKey in categories){let category=categories?.[categoryKey]||{};++loadedCount;let loadedPercent=Math.min(1,loadedCount/categoriesCount);if(category==null)continue;let{animeFilters,sortBy}=category;let newCategory=updateAnimeList(animeFilters,sortBy,recommendedAnimeListArray,hiddenEntries,cautions,loadedPercent);category.animeFilters=newCategory.animeFilters;category.isHiddenList=newCategory.isHiddenList;category.shownSortName=newCategory.shownSortName;category.sortBy=newCategory.sortBy;category.animeList=newCategory.animeList;userList.categories[categoryKey]=category}self.postMessage({progress:85});await saveJSON(userList,"userList").then(async()=>{await saveJSON(false,"shouldLoadAnime");self.postMessage({progress:95});const updates={postId:postId};if(updateUserList||updateAnimeCautions){updates.updateUserList=true}if(updateRecommendedAnimeList){updates.updateRecommendedAnimeList=true}if(updateAnimeCautions){updates.updateAnimeCautions=true}self.postMessage(updates)})};if(hasOwnProperty.call(data,"updateAnimeCautions")){self.postMessage({progress:30});let animeCautions=data?.animeCautions;if(animeCautions!=null){callUpdateUserList(animeCautions)}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}else{callUpdateUserList()}}else{self.postMessage({progress:95});self.postMessage({postId:postId})}}}catch(error){console.error(error);self.postMessage({error:error,postId:postId})}};async function getContentCaution(animeCautions){let semiContentCautions={genres:{},tags:{}},cautionContents={genres:{},tags:{}};for(let i=0,l=animeCautions?.length;i<l;i++){let{status,filterType,optionName,optionCategory}=animeCautions[i]||{};if(status==="included"){if(filterType==="selection"){if(optionCategory==="genre"){semiContentCautions.genres[optionName.toLowerCase()]=true}else if(optionCategory==="tag"){semiContentCautions.tags[optionName.toLowerCase()]=true}}}else if(status==="excluded"){if(filterType==="selection"){if(optionCategory==="genre"){cautionContents.genres[optionName.toLowerCase()]=true}else if(optionCategory==="tag"){cautionContents.tags[optionName.toLowerCase()]=true}}}}return{semiContentCautions:semiContentCautions,cautionContents:cautionContents}}function updateAnimeList(animeFilters,sortBy,recommendedAnimeListArray,hiddenEntries,cautions,loadedPercent=1){let flexibleInclusion={},include={genres:{},tags:{},season:{},format:{},countryOfOrigin:{},status:{},userStatus:{},studios:{},year:{}},exclude={genres:{},tags:{},season:{},format:{},countryOfOrigin:{},status:{},userStatus:{},studios:{},year:{}},comparisonFilter={weightedScore:null,score:null,averageScore:null,userScore:null,popularity:null,year:null},shownAnime={include:{},exclude:{}},shownSortName,animeIncluded,hasNonBaselineIncludedSeason,hasNonBaselineExcludedSeason;let showHiddenList=false,hideMyAnime=false,hideWatched=false,showMyAnime=false,showAllSequels=false,showUserUnwatchedSequel=false,showAdaptedManga=false;const{semiContentCautions,cautionContents}=cautions;for(let i=0,l=animeFilters?.length;i<l;i++){let{status,filterType,optionName,optionCategory,optionValue,CMPOperator,CMPNumber}=animeFilters[i]||{};if(status==="included"){if(filterType==="selection"){if(optionCategory==="shown score"){shownSortName=optionName.toLowerCase()}else if(optionCategory==="flexible inclusion"){flexibleInclusion[optionName.replace("OR: ","").toLowerCase()]=true}else if(optionCategory==="shown list"){shownAnime.include[optionName.toLowerCase()]=true}else if(optionCategory==="genre"){include.genres[optionName.toLowerCase()]=true}else if(optionCategory==="tag"){include.tags[optionName.toLowerCase()]=true}else if(optionCategory==="year"){include.year[optionName]=true}else if(optionCategory==="season"){include.season[optionName.toLowerCase()]=true}else if(optionCategory==="format"){let lowerOptionName=optionName.toLowerCase();if(lowerOptionName==="anime"){animeIncluded=true}else{include.format[lowerOptionName]=true}}else if(optionCategory==="country of origin"){include.countryOfOrigin[optionName.toLowerCase()]=true}else if(optionCategory==="airing status"){include.status[optionName.toLowerCase()]=true}else if(optionCategory==="user status"){include.userStatus[optionName.toLowerCase()]=true}else if(optionCategory==="studio"){include.studios[optionName.toLowerCase()]=true}}else if(filterType==="bool"){if(optionName.toLowerCase()==="hidden list"){showHiddenList=true}else if(optionName.toLowerCase()==="hide my list"){hideMyAnime=true}else if(optionName.toLowerCase()==="hide my finished list"){hideWatched=true}else if(optionName.toLowerCase()==="show my list"){showMyAnime=true}else if(optionName.toLowerCase()==="show all sequels"){showAllSequels=true}else if(optionName.toLowerCase()==="show next sequel"){showUserUnwatchedSequel=true}else if(optionName.toLowerCase()==="show adapted manga"){showAdaptedManga=true}}else if(filterType==="number"){if(optionName.toLowerCase()==="weighted score"){comparisonFilter.weightedScore={operator:CMPOperator,value:parseFloat(CMPNumber??optionValue)}}else if(optionName.toLowerCase()==="score"){comparisonFilter.score={operator:CMPOperator,value:parseFloat(CMPNumber??optionValue)}}else if(optionName.toLowerCase()==="average score"){comparisonFilter.averageScore={operator:CMPOperator,value:parseFloat(CMPNumber??optionValue)}}else if(optionName.toLowerCase()==="user score"){comparisonFilter.userScore={operator:CMPOperator,value:parseFloat(CMPNumber??optionValue)}}else if(optionName.toLowerCase()==="popularity"){comparisonFilter.popularity={operator:CMPOperator,value:parseFloat(CMPNumber??optionValue)}}else if(optionName.toLowerCase()==="year"){comparisonFilter.year={operator:CMPOperator,value:parseFloat(CMPNumber??optionValue)}}}}else if(status==="excluded"){if(filterType==="selection"){if(optionCategory==="shown list"){shownAnime.exclude[optionName.toLowerCase()]=true}else if(optionCategory==="genre"){exclude.genres[optionName.toLowerCase()]=true}else if(optionCategory==="tag"){exclude.tags[optionName.toLowerCase()]=true}else if(optionCategory==="year"){exclude.year[optionName]=true}else if(optionCategory==="season"){exclude.season[optionName.toLowerCase()]=true}else if(optionCategory==="format"){let lowerOptionName=optionName.toLowerCase();if(lowerOptionName==="anime"){animeIncluded=false}else{exclude.format[lowerOptionName]=true}}else if(optionCategory==="country of origin"){exclude.countryOfOrigin[optionName.toLowerCase()]=true}else if(optionCategory==="airing status"){exclude.status[optionName.toLowerCase()]=true}else if(optionCategory==="user status"){exclude.userStatus[optionName.toLowerCase()]=true}else if(optionCategory==="studio"){exclude.studios[optionName.toLowerCase()]=true}}}}let recommendedAnimeListArrayLen=recommendedAnimeListArray.length;let animeList=recommendedAnimeListArray.filter((anime,idx)=>{loadProgress(Math.min((idx+1)/recommendedAnimeListArrayLen*loadedPercent*100,80));if(hideMyAnime){if(!ncsCompare(anime?.userStatus,"unwatched")){return false}}if(showMyAnime){if(ncsCompare(anime?.userStatus,"unwatched")){return false}}if(showHiddenList){if(hiddenEntries?.[anime.id]===undefined){return false}}else{if(hiddenEntries[anime.id]){return false}}if(hideWatched){if(["completed","dropped"].some(e=>ncsCompare(e,anime?.userStatus))){return false}}if(comparisonFilter.userScore){let operator=comparisonFilter.userScore.operator?.trim?.(),value=comparisonFilter.userScore.value;if(typeof anime.userScore!=="number"){return false}else if(typeof operator==="string"&&typeof value==="number"){switch(operator){case">=":{if(anime.userScore<value)return false;break}case"<=":{if(anime.userScore>value)return false;break}case"<":{if(anime.userScore>=value)return false;break}case">":{if(anime.userScore<=value)return false;break}}}else if(typeof value==="number"){if(anime.userScore!==value)return false}}if(comparisonFilter.averageScore){let operator=comparisonFilter.averageScore.operator?.trim?.(),value=comparisonFilter.averageScore.value;if(typeof anime.averageScore!=="number"){return false}else if(typeof operator==="string"&&typeof value==="number"){switch(operator){case">=":{if(anime.averageScore<value)return false;break}case"<=":{if(anime.averageScore>value)return false;break}case"<":{if(anime.averageScore>=value)return false;break}case">":{if(anime.averageScore<=value)return false;break}}}else if(typeof value==="number"){if(anime.averageScore!==value)return false}}if(comparisonFilter.popularity){let operator=comparisonFilter.popularity.operator?.trim?.(),value=comparisonFilter.popularity.value;if(typeof anime.popularity!=="number"){return false}else if(typeof operator==="string"&&typeof value==="number"){switch(operator){case">=":{if(anime.popularity<value)return false;break}case"<=":{if(anime.popularity>value)return false;break}case"<":{if(anime.popularity>=value)return false;break}case">":{if(anime.popularity<=value)return false;break}}}else if(typeof value==="number"){if(anime.popularity!==value)return false}}if(comparisonFilter.weightedScore){let operator=comparisonFilter.weightedScore.operator?.trim?.(),value=comparisonFilter.weightedScore.value;if(typeof anime.weightedScore!=="number"){return false}else if(typeof operator==="string"&&typeof value==="number"){switch(operator){case">=":{if(anime.weightedScore<value)return false;break}case"<=":{if(anime.weightedScore>value)return false;break}case"<":{if(anime.weightedScore>=value)return false;break}case">":{if(anime.weightedScore<=value)return false;break}}}else if(typeof value==="number"){if(anime.weightedScore!==value)return false}}if(comparisonFilter.score){let operator=comparisonFilter.score.operator?.trim?.(),value=comparisonFilter.score.value;if(typeof anime.score!=="number"){return false}else if(typeof operator==="string"&&typeof value==="number"){switch(operator){case">=":{if(anime.score<value)return false;break}case"<=":{if(anime.score>value)return false;break}case"<":{if(anime.score>=value)return false;break}case">":{if(anime.score<=value)return false;break}}}else if(typeof value==="number"){if(anime.score!==value)return false}}if(comparisonFilter.year){if(anime.year==null)return false;let year=parseInt(anime.year);let operator=comparisonFilter.year.operator?.trim?.(),value=comparisonFilter.year.value;if(typeof year!=="number"){return false}else if(typeof operator==="string"&&typeof value==="number"){switch(operator){case">=":{if(year<value)return false;break}case"<=":{if(year>value)return false;break}case"<":{if(year>=value)return false;break}case">":{if(year<=value)return false;break}}}else if(typeof value==="number"){if(year!==value)return false}}if(animeIncluded===false){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();if(lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"){return false}}else{return false}}if(typeof anime?.format==="string"&&!jsonIsEmpty(exclude.format)&&exclude.format[anime.format.toLowerCase()]){return false}if(typeof anime?.countryOfOrigin==="string"&&!jsonIsEmpty(exclude.countryOfOrigin)&&exclude.countryOfOrigin[anime.countryOfOrigin.toLowerCase()]){return false}if(typeof anime?.userStatus==="string"&&!jsonIsEmpty(exclude.userStatus)&&exclude.userStatus[anime.userStatus.toLowerCase()]){return false}if(typeof anime?.status==="string"&&!jsonIsEmpty(exclude.status)&&exclude.status[anime.status.toLowerCase()]){return false}if(anime?.year&&!jsonIsEmpty(exclude.year)&&exclude.year[anime.year?.toString?.()?.toLowerCase?.()]){return false}let entryMightBeAnime;if(!jsonIsEmpty(exclude.season)){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryMightBeAnime=lowerFormat==="manga"||lowerFormat==="one shot"||lowerFormat==="novel"}if(!entryMightBeAnime){if(exclude.season["current season"]||exclude.season["next season"]||exclude.season["previous season"]||exclude.season["ongoing seasons"]||exclude.season["future seasons"]||exclude.season["past seasons"]){let year=parseInt(anime?.year);if(!isNaN(year)){let season=anime?.season?.toLowerCase?.();let currentSeasonYear=getCurrentSeasonYear()||{};if(typeof season==="string"){const seasonYear=`${season} ${year}`;if((exclude.season["current season"]||exclude.season["ongoing seasons"])&&seasonYear===currentSeasonYear.seasonYear){return false}if((exclude.season["next season"]||exclude.season["future seasons"])&&seasonYear===currentSeasonYear.nextSeasonYear){return false}if((exclude.season["previous season"]||exclude.season["past seasons"])&&seasonYear===currentSeasonYear.previousSeasonYear){return false}}if((exclude.season["ongoing seasons"]||exclude.season["past seasons"])&&(year<currentSeasonYear.year||year===currentSeasonYear.year&&currentSeasonYear.pastSeasonsInCurrentYear?.[season])){if(exclude.season["past seasons"]){return false}else if(typeof anime?.status==="string"){if(["releasing","not yet released"].some(status=>status===anime.status.toLowerCase())){return false}}}if(exclude.season["future seasons"]&&(year>currentSeasonYear.year||year===currentSeasonYear.year&&currentSeasonYear.futureSeasonsInCurrentYear?.[season])){return false}}}if(typeof anime?.season==="string"){if(hasNonBaselineExcludedSeason==null){let allSeasonCount=Object.keys(exclude.season).length;let nonSeasonCount=["current season","next season","previous season","ongoing seasons","future seasons","past seasons"].reduce((count,nonSeason)=>count+(exclude.season[nonSeason]?1:0),0);hasNonBaselineExcludedSeason=allSeasonCount>nonSeasonCount}if(hasNonBaselineExcludedSeason&&exclude.season[anime.season.toLowerCase()]){return false}}}}let studioArray,entryIsAnime;if(!jsonIsEmpty(shownAnime.exclude)){if(shownAnime.exclude["recommended studios"]){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}if(entryIsAnime&&isJsonObject(anime.favoriteContents?.studios)&&!jsonIsEmpty(anime.favoriteContents?.studios)){studioArray=Object.keys(anime.studios).map(studio=>studio?.trim?.()?.toLowerCase?.());if(studioArray.some(studio=>anime.favoriteContents.studios[studio]!=null)){return false}}}if(shownAnime.exclude["non-caution"]){if(!jsonIsEmpty(cautionContents.genres)&&!anime.genres.some(e=>{if(typeof e!=="string")return false;return cautionContents.genres[e.toLowerCase()]})&&!jsonIsEmpty(cautionContents.tags)&&!anime.tags.some(e=>{let tagName=e?.name||e;if(typeof tagName!=="string")return false;return cautionContents.tags[tagName.toLowerCase()]}))return false}if(shownAnime.exclude["non-semi-caution"]){if(!jsonIsEmpty(semiContentCautions.genres)&&!anime.genres.some(e=>{if(typeof e!=="string")return false;return semiContentCautions.genres[e.toLowerCase()]})&&!jsonIsEmpty(semiContentCautions.tags)&&!anime.tags.some(e=>{let tagName=e?.name||e;if(typeof tagName!=="string")return false;return semiContentCautions.tags[tagName.toLowerCase()]}))return false}if(shownAnime.exclude["recommended score"]||shownAnime.exclude["semi-recommended score"]||shownAnime.exclude["other"]){if(typeof anime.score!=="number"){return false}if(shownAnime.exclude["recommended score"]){if(typeof anime.meanScoreAbove!=="number")return false;if(anime.score>=anime.meanScoreAbove)return false}if(shownAnime.exclude["semi-recommended score"]){if(typeof anime.meanScoreAll!=="number"||typeof anime.meanScoreAbove!=="number")return false;if(anime.score<anime.meanScoreAbove&&anime.score>=anime.meanScoreAll)return false}if(shownAnime.exclude["other"]){if(typeof anime.meanScoreAll!=="number")return false;if(anime.score<anime.meanScoreAll)return false}}}if(!jsonIsEmpty(exclude.genres)){if(anime.genres.some(e=>{if(typeof e!=="string")return false;return exclude.genres[e.toLowerCase()]}))return false}if(!jsonIsEmpty(exclude.tags)){if(anime.tags.some(e=>{let tagName=e?.name||e;if(typeof tagName!=="string")return false;return exclude.tags[tagName.toLowerCase()]}))return false}if(!jsonIsEmpty(exclude.studios)){if(entryMightBeAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryMightBeAnime=lowerFormat==="manga"||lowerFormat==="one shot"||lowerFormat==="novel"}}if(!entryMightBeAnime){for(let studio in anime.studios){if(typeof studio==="string"&&exclude.studios[studio?.toLowerCase?.()]){return false}}}}if(!jsonIsEmpty(shownAnime.include)){if(shownAnime.include["recommended studios"]){if(entryIsAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}}if(entryIsAnime){if(!isJsonObject(anime.favoriteContents?.studios)||jsonIsEmpty(anime.favoriteContents?.studios))return false;studioArray=studioArray||Object.keys(anime.studios).map(studio=>studio?.trim?.()?.toLowerCase?.());if(!studioArray.some(studio=>anime.favoriteContents.studios[studio]!=null)){return false}}}if(shownAnime.include["non-caution"]){if(!anime.genres.length||anime.genres.some(e=>{if(typeof e!=="string")return false;return cautionContents.genres[e.toLowerCase()]}))return false;if(!anime.tags.length||anime.tags.some(e=>{let tagName=e?.name||e;if(typeof tagName!=="string")return false;return cautionContents.tags[tagName.toLowerCase()]}))return false}if(shownAnime.include["non-semi-caution"]){if(!anime.genres.length||anime.genres.some(e=>{if(typeof e!=="string")return false;return semiContentCautions.genres[e.toLowerCase()]}))return false;if(!anime.tags.length||anime.tags.some(e=>{let tagName=e?.name||e;if(typeof tagName!=="string")return false;return semiContentCautions.tags[tagName.toLowerCase()]}))return false}if(shownAnime.include["recommended score"]||shownAnime.include["semi-recommended score"]||shownAnime.include["other"]){if(typeof anime.score!=="number"){return false}if(shownAnime.include["recommended score"]&&shownAnime.include["semi-recommended score"]){if(typeof anime.meanScoreAll!=="number")return false;if(anime.score<anime.meanScoreAll)return false}else if(shownAnime.include["recommended score"]&&shownAnime.include["other"]){if(typeof anime.meanScoreAll!=="number"||typeof anime.meanScoreAbove!=="number")return false;if(anime.score<anime.meanScoreAbove&&anime.score>=anime.meanScoreAll)return false}else if(shownAnime.include["semi-recommended score"]&&shownAnime.include["other"]){if(typeof anime.meanScoreAbove!=="number")return false;if(anime.score>=anime.meanScoreAbove)return false}else if(shownAnime.include["recommended score"]){if(typeof anime.meanScoreAbove!=="number")return false;if(anime.score<anime.meanScoreAbove)return false}else if(shownAnime.include["semi-recommended score"]){if(typeof anime.meanScoreAll!=="number"||typeof anime.meanScoreAbove!=="number")return false;if(anime.score>=anime.meanScoreAbove||anime.score<anime.meanScoreAll)return false}else if(shownAnime.include["other"]){if(typeof anime.meanScoreAll!=="number")return false;if(anime.score>=anime.meanScoreAll)return false}}}if(!jsonIsEmpty(include.season)){if(entryMightBeAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryMightBeAnime=lowerFormat==="manga"||lowerFormat==="one shot"||lowerFormat==="novel"}}if(!entryMightBeAnime){if(hasNonBaselineIncludedSeason==null){let allSeasonCount=Object.keys(include.season).length;let nonSeasonCount=["current season","next season","previous season","ongoing seasons","future seasons","past seasons"].reduce((count,nonSeason)=>count+(include.season[nonSeason]?1:0),0);hasNonBaselineIncludedSeason=allSeasonCount>nonSeasonCount}let season=anime?.season?.toLowerCase?.();if(hasNonBaselineIncludedSeason&&!include.season[season]){return false}if(include.season["current season"]||include.season["next season"]||include.season["previous season"]||include.season["ongoing seasons"]||include.season["future seasons"]||include.season["past seasons"]){let isNonBaselineSeasonNotIncluded=true;do{let year=parseInt(anime?.year);if(!isNaN(year)){let currentSeasonYear=getCurrentSeasonYear()||{};if(typeof season==="string"){const seasonYear=`${season} ${year}`;if((include.season["current season"]||include.season["ongoing seasons"])&&seasonYear===currentSeasonYear.seasonYear){isNonBaselineSeasonNotIncluded=false;break}if((include.season["next season"]||include.season["future seasons"])&&seasonYear===currentSeasonYear.nextSeasonYear){isNonBaselineSeasonNotIncluded=false;break}if((include.season["previous season"]||include.season["past seasons"])&&seasonYear===currentSeasonYear.previousSeasonYear){isNonBaselineSeasonNotIncluded=false;break}}if((include.season["ongoing seasons"]||include.season["past seasons"])&&(year<currentSeasonYear.year||year===currentSeasonYear.year&&currentSeasonYear.pastSeasonsInCurrentYear?.[season])){if(include.season["past seasons"]){isNonBaselineSeasonNotIncluded=false;break}else if(typeof anime?.status==="string"){if(["releasing","not yet released"].some(status=>status===anime.status.toLowerCase())){isNonBaselineSeasonNotIncluded=false;break}}}if(include.season["future seasons"]&&(year>currentSeasonYear.year||year===currentSeasonYear.year&&currentSeasonYear.futureSeasonsInCurrentYear?.[season])){isNonBaselineSeasonNotIncluded=false}}break}while(false);if(isNonBaselineSeasonNotIncluded){return false}}}}if(animeIncluded===true){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();if(lowerFormat==="manga"&&!include.format.manga||lowerFormat==="one shot"&&!include.format["one shot"]||lowerFormat==="novel"&&!include.format.novel){return false}}else{return false}}if(!jsonIsEmpty(include.format)){let lowerFormat=anime?.format?.toLowerCase?.();if(!include.format[lowerFormat]){if(animeIncluded&&lowerFormat){if(lowerFormat!=="tv"&&lowerFormat!=="movie"&&lowerFormat!=="ona"&&lowerFormat!=="special"&&lowerFormat!=="tv short"&&lowerFormat!=="ova"){return false}}else{return false}}}if(!jsonIsEmpty(include.countryOfOrigin)){if(!include.countryOfOrigin[anime?.countryOfOrigin?.toLowerCase?.()]){return false}}if(!jsonIsEmpty(include.userStatus)){if(!include.userStatus[anime?.userStatus?.toLowerCase?.()]){return false}}if(!jsonIsEmpty(include.status)){if(!include.status[anime?.status?.toLowerCase?.()]){return false}}if(!jsonIsEmpty(include.year)){if(!include.year[anime?.year?.toString?.()]){return false}}let inclusions={};if(flexibleInclusion["genre / tag / studio"]){inclusions.genre=inclusions.tag=inclusions.studio=true;let isIncluded=jsonIsEmpty(include.genres)&&jsonIsEmpty(include.tags)&&jsonIsEmpty(include.studios);if(!isIncluded&&!jsonIsEmpty(include.genres)){isIncluded=anime.genres.some(genre=>include.genres[genre.toLowerCase()])}if(!isIncluded&&!jsonIsEmpty(include.tags)){isIncluded=anime.tags.some(tag=>{let tagName=tag?.name||tag;return include.tags[tagName.toLowerCase()]})}if(!isIncluded&&!jsonIsEmpty(include.studios)){if(entryIsAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}}if(entryIsAnime){for(let studio in anime.studios){if(include.studios[studio.toLowerCase()]){isIncluded=true;break}}}else{isIncluded=true}}if(!isIncluded)return false}else if(flexibleInclusion["genre / tag"]){inclusions.genre=inclusions.tag=true;let isIncluded=jsonIsEmpty(include.genres)&&jsonIsEmpty(include.tags);if(!isIncluded&&!jsonIsEmpty(include.genres)){isIncluded=anime.genres.some(genre=>include.genres[genre.toLowerCase()])}if(!isIncluded&&!jsonIsEmpty(include.tags)){isIncluded=anime.tags.some(tag=>{let tagName=tag?.name||tag;return include.tags[tagName.toLowerCase()]})}if(!isIncluded)return false}else if(flexibleInclusion["genre / studio"]){inclusions.genre=inclusions.studio=true;let isIncluded=jsonIsEmpty(include.genres)&&jsonIsEmpty(include.studios);if(!isIncluded&&!jsonIsEmpty(include.genres)){isIncluded=anime.genres.some(genre=>include.genres[genre.toLowerCase()])}if(!isIncluded&&!jsonIsEmpty(include.studios)){if(entryIsAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}}if(entryIsAnime){for(let studio in anime.studios){if(include.studios[studio.toLowerCase()]){isIncluded=true;break}}}else{isIncluded=true}}if(!isIncluded)return false}else if(flexibleInclusion["tag / studio"]){inclusions.tag=inclusions.studio=true;let isIncluded=jsonIsEmpty(include.tags)&&jsonIsEmpty(include.studios);if(!isIncluded&&!jsonIsEmpty(include.tags)){isIncluded=anime.tags.some(tag=>{let tagName=tag?.name||tag;return include.tags[tagName.toLowerCase()]})}if(!isIncluded&&!jsonIsEmpty(include.studios)){if(entryIsAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}}if(entryIsAnime){for(let studio in anime.studios){if(include.studios[studio.toLowerCase()]){isIncluded=true;break}}}else{isIncluded=true}}if(!isIncluded)return false}if(!inclusions.genre&&!jsonIsEmpty(include.genres)){if(flexibleInclusion["genre"]){if(!anime.genres.some(genre=>include.genres[genre.toLowerCase()])){return false}}else{for(let genre in include.genres){if(!anime.genres.some(e=>{return ncsCompare(e,genre)}))return false}}}if(!inclusions.tag&&!jsonIsEmpty(include.tags)){if(flexibleInclusion["tag"]){if(!anime.tags.some(tag=>{let tagName=tag?.name||tag;return include.tags[tagName.toLowerCase()]})){return false}}else{for(let tag in include.tags){if(!anime.tags.some(e=>{let tagName=e?.name||e;return ncsCompare(tagName,tag)}))return false}}}if(!inclusions.studio&&!jsonIsEmpty(include.studios)){if(flexibleInclusion["studio"]){let isIncluded;if(entryIsAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}}if(entryIsAnime){for(let studio in anime.studios){if(include.studios[studio.toLowerCase()]){isIncluded=true;break}}if(!isIncluded)return false}}else{if(entryIsAnime==null){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();entryIsAnime=lowerFormat!=="manga"&&lowerFormat!=="one shot"&&lowerFormat!=="novel"}}if(entryIsAnime){let _studios=Object.keys(anime.studios);for(let studio in include.studios){if(!_studios.some(e=>{return ncsCompare(e,studio)}))return false}}}}let animeRelations=anime?.animeRelations;if(showUserUnwatchedSequel&&animeRelations instanceof Array){let userStatus=anime?.userStatus?.trim?.()?.toLowerCase?.();let isNotUserAnimeUnwatchedSequel=["completed","repeating","dropped"].some(e=>e===userStatus)||!animeRelations.some(e=>{let animeRelationType=e?.relationType?.trim?.()?.toLowerCase?.();let animeRelationID=e?.node?.id;if(typeof animeRelationType==="string"&&animeRelationType==="prequel"&&typeof animeRelationID==="number"&&!isNaN(animeRelationID)){let relationAnime=recommendedAnimeListArray?.find?.(anime=>anime?.id===animeRelationID);let relationStatus=relationAnime?.userStatus?.trim?.()?.toLowerCase?.();return["completed","repeating"].some(e=>e===relationStatus)}});if(isNotUserAnimeUnwatchedSequel){return false}}if(!showAllSequels&&animeRelations instanceof Array){let isUnwatchedSequel=!animeRelations.some(e=>{let animeRelationType=e?.relationType?.trim?.()?.toLowerCase?.();return typeof animeRelationType==="string"&&animeRelationType==="prequel"})||animeRelations.some(e=>{let animeRelationType=e?.relationType?.trim?.()?.toLowerCase?.();let animeRelationID=e?.node?.id;if(typeof animeRelationType==="string"&&animeRelationType==="prequel"&&typeof animeRelationID==="number"&&!isNaN(animeRelationID)){let relationAnime=recommendedAnimeListArray?.find?.(anime=>anime?.id===animeRelationID);let relationStatus=relationAnime?.userStatus?.trim?.()?.toLowerCase?.();if(relationStatus!=="unwatched"&&relationStatus!=="dropped"){return true}else{let animePopularity=anime?.popularity;let animeRelationPopularity=e?.node?.popularity;return typeof animePopularity==="number"&&!isNaN(animePopularity)&&typeof animeRelationPopularity==="number"&&!isNaN(animeRelationPopularity)&&animeRelationPopularity<=animePopularity}}});if(!isUnwatchedSequel){return false}}if(!showAdaptedManga&&animeRelations instanceof Array){if(typeof anime?.format==="string"){let lowerFormat=anime.format.toLowerCase();if(lowerFormat==="manga"||lowerFormat==="one shot"||lowerFormat==="novel"){let hasAnimeAdaptation=animeRelations.some(e=>{let animeRelationType=e?.relationType?.trim?.()?.toLowerCase?.();let animeRelationID=e?.node?.id;if(typeof animeRelationType==="string"&&(animeRelationType==="adaptation"||animeRelationType==="alternative")&&typeof animeRelationID==="number"&&!isNaN(animeRelationID)){let relationAnime=recommendedAnimeListArray?.find?.(anime=>anime?.id===animeRelationID);let relationFormat=relationAnime?.format?.trim?.()?.toLowerCase?.();let isAnime=relationFormat!=="manga"&&relationFormat!=="one shot"&&relationFormat!=="novel";if(!isAnime)return false;let relationStatus=relationAnime?.status?.trim?.()?.toLowerCase?.();return relationStatus==="finished"||relationStatus==="releasing"||relationStatus==="not yet released"}});if(hasAnimeAdaptation){return false}}}else{return false}}return true});let sortType=sortBy?.sortType||"desc";let sortName=sortBy?.sortName||"weighted score";if(sortType==="desc"){if(sortName==="weighted score"){animeList.sort((a,b)=>{let x=a?.weightedScore!=null?a.weightedScore:-Infinity,y=b?.weightedScore!=null?b.weightedScore:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;if(x!==y)return y-x;x=a?.trending!=null?a.trending:-Infinity;y=b?.trending!=null?b.trending:-Infinity;return y-x})}else if(sortName==="score"){animeList.sort((a,b)=>{let x=a?.score!=null?a.score:-Infinity,y=b?.score!=null?b.score:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.trending!=null?a.trending:-Infinity;y=b?.trending!=null?b.trending:-Infinity;return y-x})}else if(sortName==="average score"){animeList.sort((a,b)=>{let x=a?.averageScore!=null?a.averageScore:-Infinity,y=b?.averageScore!=null?b.averageScore:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}else if(sortName==="user score"){animeList.sort((a,b)=>{let x=a?.userScore!=null?a.userScore:-Infinity,y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;if(x!==y)return y-x;x=a?.averageScore!=null?a.averageScore:-Infinity;y=b?.averageScore!=null?b.averageScore:-Infinity;return y-x})}else if(sortName==="popularity"){animeList.sort((a,b)=>{let x=a?.popularity!=null?a.popularity:-Infinity,y=b?.popularity!=null?b.popularity:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.favorites!=null?a.favorites:-Infinity;y=b?.favorites!=null?b.favorites:-Infinity;if(x!==y)return y-x;x=a?.trending!=null?a.trending:-Infinity;y=b?.trending!=null?b.trending:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}else if(sortName==="trending"){animeList.sort((a,b)=>{let x=a?.trending!=null?a.trending:-Infinity,y=b?.trending!=null?b.trending:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.popularity!=null?a.popularity:-Infinity;y=b?.popularity!=null?b.popularity:-Infinity;if(x!==y)return y-x;x=a?.favorites!=null?a.favorites:-Infinity;y=b?.favorites!=null?b.favorites:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}else if(sortName==="favorites"){animeList.sort((a,b)=>{let x=a?.favorites!=null?a.favorites:-Infinity,y=b?.favorites!=null?b.favorites:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.averageScore!=null?a.averageScore:-Infinity;y=b?.averageScore!=null?b.averageScore:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}else if(sortName==="date updated"){animeList.sort((a,b)=>{let x=a?.dateEdited||a?.dateAdded?Math.max(a?.dateEdited||0,a?.dateAdded||0):-Infinity,y=b?.dateEdited||b?.dateAdded?Math.max(b?.dateEdited||0,b?.dateAdded||0):-Infinity;if(x!==y)return y-x;let year=a?.year;let season=a?.season?.toLowerCase?.();let startDate=a?.startDate||{};let month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}let day=startDate?.day;let dateA=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();year=b?.year;season=b?.season?.toLowerCase?.();startDate=b?.startDate||{};month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}day=startDate?.day;let dateB=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();x=dateA!=null?dateA:-Infinity;y=dateB!=null?dateB:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.trending!=null?a.trending:-Infinity;y=b?.trending!=null?b.trending:-Infinity;if(x!==y)return y-x;x=a?.popularity!=null?a.popularity:-Infinity;y=b?.popularity!=null?b.popularity:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}else if(sortName==="date added"){animeList.sort((a,b)=>{let x=a?.id!=null?parseInt(a?.id):-Infinity,y=b?.id!=null?parseInt(b?.id):-Infinity;if(x!==y)return y-x;x=a?.dateAdded?a?.dateAdded:-Infinity;y=b?.dateAdded?b?.dateAdded:-Infinity;if(x!==y)return y-x;let year=a?.year;let season=a?.season?.toLowerCase?.();let startDate=a?.startDate||{};let month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}let day=startDate?.day;let dateA=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();year=b?.year;season=b?.season?.toLowerCase?.();startDate=b?.startDate||{};month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}day=startDate?.day;let dateB=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();x=dateA!=null?dateA:-Infinity;y=dateB!=null?dateB:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.trending!=null?a.trending:-Infinity;y=b?.trending!=null?b.trending:-Infinity;if(x!==y)return y-x;x=a?.popularity!=null?a.popularity:-Infinity;y=b?.popularity!=null?b.popularity:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}else if(sortName==="date"){animeList.sort((a,b)=>{let year=a?.year;let season=a?.season?.toLowerCase?.();let startDate=a?.startDate||{};let month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}let day=startDate?.day;let dateA=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();year=b?.year;season=b?.season?.toLowerCase?.();startDate=b?.startDate||{};month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}day=startDate?.day;let dateB=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();let x=dateA!=null?dateA:-Infinity;let y=dateB!=null?dateB:-Infinity;if(x!==y)return y-x;x=a?.userScore!=null?a.userScore:-Infinity;y=b?.userScore!=null?b.userScore:-Infinity;if(x!==y)return y-x;x=a?.trending!=null?a.trending:-Infinity;y=b?.trending!=null?b.trending:-Infinity;if(x!==y)return y-x;x=a?.popularity!=null?a.popularity:-Infinity;y=b?.popularity!=null?b.popularity:-Infinity;if(x!==y)return y-x;x=a?.score!=null?a.score:-Infinity;y=b?.score!=null?b.score:-Infinity;return y-x})}}else if(sortType==="asc"){if(sortName==="weighted score"){animeList.sort((a,b)=>{let x=a?.weightedScore!=null?a?.weightedScore:Infinity,y=b?.weightedScore!=null?b?.weightedScore:Infinity;return x-y})}else if(sortName==="score"){animeList.sort((a,b)=>{let x=a?.score!=null?a?.score:Infinity,y=b?.score!=null?b?.score:Infinity;return x-y})}else if(sortName==="average score"){animeList.sort((a,b)=>{let x=a?.averageScore!=null?a?.averageScore:Infinity,y=b?.averageScore!=null?b?.averageScore:Infinity;return x-y})}else if(sortName==="user score"){animeList.sort((a,b)=>{let x=a?.userScore!=null?a?.userScore:Infinity,y=b?.userScore!=null?b?.userScore:Infinity;return x-y})}else if(sortName==="popularity"){animeList.sort((a,b)=>{let x=a?.popularity!=null?a?.popularity:Infinity,y=b?.popularity!=null?b?.popularity:Infinity;return x-y})}else if(sortName==="trending"){animeList.sort((a,b)=>{let x=a?.trending!=null?a?.trending:Infinity,y=b?.trending!=null?b?.trending:Infinity;if(x!==y)return x-y;x=a?.popularity!=null?a.popularity:Infinity;y=b?.popularity!=null?b.popularity:Infinity;return x-y})}else if(sortName==="favorites"){animeList.sort((a,b)=>{let x=a?.favorites!=null?a?.favorites:Infinity,y=b?.favorites!=null?b?.favorites:Infinity;if(x!==y)return x-y;x=a?.popularity!=null?a.popularity:Infinity;y=b?.popularity!=null?b.popularity:Infinity;return x-y})}else if(sortName==="date updated"){animeList.sort((a,b)=>{let x=a?.dateEdited||a?.dateAdded?Math.max(a?.dateEdited||0,a?.dateAdded||0):Infinity,y=b?.dateEdited||b?.dateAdded?Math.max(b?.dateEdited||0,b?.dateAdded||0):Infinity;if(x!==y)return x-y;let year=a?.year;let season=a?.season?.toLowerCase?.();let startDate=a?.startDate||{};let month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}let day=startDate?.day;x=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();year=b?.year;season=b?.season?.toLowerCase?.();startDate=b?.startDate||{};month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}day=startDate?.day;y=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();x=x!=null?x:Infinity;y=y!=null?y:Infinity;return x-y})}else if(sortName==="date added"){animeList.sort((a,b)=>{let x=a?.id!=null?parseInt(a?.id):Infinity,y=b?.id!=null?parseInt(b?.id):Infinity;if(x!==y)return x-y;x=a?.dateAdded?a?.dateAdded:Infinity;y=b?.dateAdded?b?.dateAdded:Infinity;if(x!==y)return x-y;let year=a?.year;let season=a?.season?.toLowerCase?.();let startDate=a?.startDate||{};let month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}let day=startDate?.day;x=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();year=b?.year;season=b?.season?.toLowerCase?.();startDate=b?.startDate||{};month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}day=startDate?.day;y=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();x=x!=null?x:Infinity;y=y!=null?y:Infinity;return x-y})}else if(sortName==="date"){animeList.sort((a,b)=>{let year=a?.year;let season=a?.season?.toLowerCase?.();let startDate=a?.startDate||{};let month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}let day=startDate?.day;let dateA=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();year=b?.year;season=b?.season?.toLowerCase?.();startDate=b?.startDate||{};month=startDate?.month;if(parseInt(month)>0){month=parseInt(month)-1}day=startDate?.day;let dateB=getJapaneseStartDate({season:season,year:year,month:month,day:day})?.getTime?.();let x=dateA!=null?dateA:Infinity;let y=dateB!=null?dateB:Infinity;return x-y})}}return{animeList:animeList.map(({id})=>id),isHiddenList:showHiddenList,shownSortName:shownSortName||sortName,animeFilters:animeFilters,sortBy:sortBy}}function getCurrentSeasonYear(){let currentDate=new Date;let year=currentDate.getFullYear();let seasons={winter:new Date(parseInt(year),0,1),spring:new Date(parseInt(year),3,1),summer:new Date(parseInt(year),6,1),fall:new Date(parseInt(year),9,1)};if(isNaN(year))return null;if(currentDate<seasons.spring){return{year:year,seasonYear:`winter ${year}`,nextSeasonYear:`spring ${year}`,previousSeasonYear:`fall ${year-1}`,futureSeasonsInCurrentYear:{summer:true,fall:true},pastSeasonsInCurrentYear:{}}}else if(currentDate>=seasons.spring&&currentDate<seasons.summer){return{year:year,seasonYear:`spring ${year}`,nextSeasonYear:`summer ${year}`,previousSeasonYear:`winter ${year}`,futureSeasonsInCurrentYear:{fall:true},pastSeasonsInCurrentYear:{}}}else if(currentDate>=seasons.summer&&currentDate<seasons.fall){return{year:year,seasonYear:`summer ${year}`,nextSeasonYear:`fall ${year}`,previousSeasonYear:`spring ${year}`,futureSeasonsInCurrentYear:{},pastSeasonsInCurrentYear:{winter:true}}}else{return{year:year,seasonYear:`fall ${year}`,nextSeasonYear:`winter ${year+1}`,previousSeasonYear:`summer ${year}`,futureSeasonsInCurrentYear:{},pastSeasonsInCurrentYear:{winter:true,spring:true}}}}function getJapaneseStartDate({season,year,month,day}){if(parseInt(year)>=0){if(parseInt(month)>=0){return new Date(parseInt(year),parseInt(month),parseInt(day||1)||1)}const seasonKey=season?.trim()?.toLowerCase?.();if(["winter","spring","summer","fall"].includes(seasonKey)&&!isNaN(year)){let seasons={winter:new Date(parseInt(year),0,1),spring:new Date(parseInt(year),3,1),summer:new Date(parseInt(year),6,1),fall:new Date(parseInt(year),9,1)};return seasons[seasonKey]}return new Date(parseInt(year),0,1)}else{return null}}function msToTime(duration,limit){try{if(duration<1e3){return"0s"}let seconds=Math.floor(duration/1e3%60),minutes=Math.floor(duration/6e4%60),hours=Math.floor(duration/36e5%24),days=Math.floor(duration/864e5%7),weeks=Math.floor(duration/6048e5%4),months=Math.floor(duration/24192e5%12),years=Math.floor(duration/290304e5%10),decades=Math.floor(duration/290304e6%10),century=Math.floor(duration/290304e7%10),millenium=Math.floor(duration/290304e8%10);let time=[];if(millenium>0)time.push(`${millenium}mil`);if(century>0)time.push(`${century}cen`);if(decades>0)time.push(`${decades}dec`);if(years>0)time.push(`${years}y`);if(months>0)time.push(`${months}mon`);if(weeks>0)time.push(`${weeks}w`);if(days>0)time.push(`${days}d`);if(hours>0)time.push(`${hours}h`);if(minutes>0)time.push(`${minutes}m`);if(seconds>0)time.push(`${seconds}s`);if(limit>0){time=time.slice(0,limit)}return time.join(" ")||"0s"}catch(e){return""}}function ncsCompare(str1,str2){if(typeof str1!=="string"||typeof str2!=="string"){return false}return str1.toLowerCase()===str2.toLowerCase()}async function IDBinit(){return await new Promise(resolve=>{let request=indexedDB.open("Kanshi.Anime.Recommendations.Anilist.W~uPtWCq=vG$TR:Zl^#t<vdS]I~N70",1);request.onerror=error=>{console.error(error)};request.onsuccess=event=>{db=event.target.result;return resolve()};request.onupgradeneeded=event=>{db=event.target.result;db.createObjectStore("MyObjectStore");let transaction=event.target.transaction;transaction.oncomplete=()=>{return resolve()}}})}async function saveJSON(data,name){return await new Promise(async(resolve,reject)=>{try{let write=db.transaction("MyObjectStore","readwrite").objectStore("MyObjectStore").openCursor();write.onsuccess=async event=>{let put=await db.transaction("MyObjectStore","readwrite").objectStore("MyObjectStore").put(data,name);put.onsuccess=event=>{return resolve()};put.onerror=event=>{return resolve()}};write.onerror=async error=>{console.error(error);return reject()}}catch(ex){console.error(ex)}})}async function retrieveJSON(name){return await new Promise(resolve=>{try{let read=db.transaction("MyObjectStore","readwrite").objectStore("MyObjectStore").get(name);read.onsuccess=()=>{return resolve(read.result)};read.onerror=error=>{console.error(error);return resolve()}}catch(ex){console.error(ex);return resolve()}})}function jsonIsEmpty(obj){for(const key in obj){return false}return true}function isJsonObject(obj){return Object.prototype.toString.call(obj)==="[object Object]"}function getDefaultUserList(){let defaultCategories=["   Completed Anime","   Completed Manga","   Completed Novel","  Airing & Upcoming","  Ongoing Manga","  Ongoing Novel"," Next Sequel in My List","Anticipated","My List","Recently Updated"];return{hiddenEntries:{},selectedCategory:"   Completed Anime",animeCautions:[{optionName:"netorare",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"rape",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"prostitution",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"ero guro",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"suicide",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"slavery",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"tragedy",optionCategory:"tag",status:"excluded",filterType:"selection"},{optionName:"ecchi",optionCategory:"genre",status:"included",filterType:"selection"},{optionName:"nudity",optionCategory:"tag",status:"included",filterType:"selection"}],categories:defaultCategories.reduce((acc,addedCategory)=>{let isUserRelated=addedCategory===" Next Sequel in My List"||addedCategory==="My List";let sortName,shownSortName;if(isUserRelated){sortName="score"}else if(addedCategory==="Anticipated"){sortName="popularity"}else if(addedCategory==="Recently Updated"){sortName="date updated"}else{sortName="weighted score"}switch(addedCategory){case"   Completed Anime":{animeFilters=[{optionName:"finished",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"},{optionName:"anime",optionCategory:"format",status:"included",filterType:"selection"}];shownSortName="average score";break}case"   Completed Manga":{animeFilters=[{optionName:"finished",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"},{optionName:"anime",optionCategory:"format",status:"excluded",filterType:"selection"},{optionName:"novel",optionCategory:"format",status:"excluded",filterType:"selection"}];shownSortName="average score";break}case"   Completed Novel":{animeFilters=[{optionName:"finished",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"},{optionName:"novel",optionCategory:"format",status:"included",filterType:"selection"}];shownSortName="average score";break}case"  Airing & Upcoming":{animeFilters=[{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"releasing",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"not yet released",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"},{optionName:"anime",optionCategory:"format",status:"included",filterType:"selection"}];shownSortName="average score";break}case"  Ongoing Manga":{animeFilters=[{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"releasing",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"},{optionName:"anime",optionCategory:"format",status:"excluded",filterType:"selection"},{optionName:"novel",optionCategory:"format",status:"excluded",filterType:"selection"}];shownSortName="average score";break}case"  Ongoing Novel":{animeFilters=[{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"releasing",optionCategory:"airing status",status:"included",filterType:"selection"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"},{optionName:"novel",optionCategory:"format",status:"included",filterType:"selection"}];shownSortName="average score";break}case" Next Sequel in My List":{animeFilters=[{optionName:"finished",optionCategory:"airing status",status:"none",filterType:"selection"},{optionName:"hide my list",filterType:"bool",status:"included"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"show next sequel",filterType:"bool",status:"included"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"}];shownSortName="average score";break}case"Anticipated":{animeFilters=[{optionName:"hide my list",status:"included",filterType:"bool"},{optionName:"hide my finished list",status:"included",filterType:"bool"},{optionName:"not yet released",optionCategory:"airing status",status:"included",filterType:"selection"}];break}case"My List":{animeFilters=[{optionName:"finished",optionCategory:"airing status",status:"none",filterType:"selection"},{optionName:"repeating",optionCategory:"user status",status:"none",filterType:"selection"},{optionName:"hide my finished list",filterType:"bool",status:"included"},{optionName:"show my list",filterType:"bool",status:"included"},{optionName:"average score",optionCategory:"shown score",status:"included",filterType:"selection"}];shownSortName="average score";break}case"Recently Updated":{animeFilters=[{optionName:"show all sequels",filterType:"bool",status:"included"},{optionName:"score",optionCategory:"shown score",status:"included",filterType:"selection"}];shownSortName="score";break}}acc[addedCategory]={isHiddenList:false,shownSortName:shownSortName||sortName,sortBy:{sortName:sortName,sortType:"desc"},animeFilters:animeFilters};return acc},{})}}let startPost=performance.now();function loadProgress(progress){let endPost=performance.now();if(endPost-startPost>17){self.postMessage({progress:progress});startPost=endPost}}